generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["mongoDb"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Type {
  id         String       @id @default(dbgenerated()) @map("_id") @db.ObjectId
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  name       String
  borrowable Boolean
  item       Item[]
  user       UserRights[]
}

model Status {
  id         String   @id @default(dbgenerated()) @map("_id") @db.ObjectId
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  name       String
  borrowable Boolean
  item       Item[]
}

model Service {
  id        String   @id @default(dbgenerated()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  date      DateTime
  price     Int
  manager   User     @relation(fields: [managerId], references: [id])
  managerId String
  item      Item     @relation(fields: [itemId], references: [id])
  itemId    String
}

model Item {
  id          String    @id @default(dbgenerated()) @map("_id") @db.ObjectId
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  number      Int
  brand       String
  model       String
  description String
  price       Float?
  buyDate     DateTime?
  serial      Json?
  status      Status    @relation(fields: [statusId], references: [id])
  statusId    String    @db.ObjectId
  type        Type      @relation(fields: [typeId], references: [id])
  typeId      String    @db.ObjectId
  tenant      User?     @relation(fields: [tenantId], references: [id])
  tenantId    String?   @db.ObjectId
  service     Service[]
}

model User {
  id        String       @id @default(dbgenerated()) @map("_id") @db.ObjectId
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  lastname  String
  firstname String
  email     String
  password  String
  items     Item[]
  services  Service[]
  rights    UserRights[]
}

model UserRights {
  id        String   @id @default(dbgenerated()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  type      Type     @relation(fields: [typeId], references: [id])
  typeId    String   @db.ObjectId
}
